[uwsgi]
#相关命令
#进python虚拟环境
#conda activate project

# 进入到项目目录
#cd /data/DjangoProject/project

#用python自带的runserver运行
#python manage.py runserver 0.0.0.0:8000
#ctrl + c 退出

#用uwsgi运行
#uwsgi --ini uwsgi.ini
#uwsgi --stop uwsgi.pid

#使用nginx连接时使用
socket=127.0.0.1:8000
#使用docker安装nginx时连接时使用
#socket = 172.17.0.1:8000
#uswgi直接做web服务器使用
#http=:8000

#项目目录
chdir=/home/zzg/file/python_project/WebProject/
#使用docker安装nginx时连接时,项目放入nginx中的html文件夹
# chdir=/data/docker/nginx/html/project

#项目中wsgi.py文件的目录，相对于项目目录
wsgi-file=WebProject/wsgi.py
#指定启动的工作进程数
processes=4
#指定工作进程的线程数
threads=2
#允许主进程存在
master=True
#保存启动后主进程的pid
pidfile=uwsgi.pid
#设置uwsgi后台运行，uwsgi.log保存日志信息
daemonize=logs/uwsgi.log
#以固定的文件大小（单位KB），切割日志文件。 例如：log-maxsize = 50000000  就是50M一个日志文件。
log-maxsize = 50000000
#当服务器退出的时候自动清理环境，删除unix socket文件和pid文件
vacuum = true

#静态文件映射，测试uwsgi配置时为了能够访问到静态资源，所以加上这个配置。在使用nginx时，需要注销掉这个配置，改用nginx来代理静态资源访问。
static-map=/static=/home/zzg/file/python_project/WebProject/static

#设置虚拟环境的路径
#conda用以下
pythonpath=/home/zzg/install_file/anaconda3/envs/Django
;pythonpath=/root/anaconda3/envs/project_py3.7
#virtualenv 用以下
# virtualenv=/root/anaconda3/envs/project_py3.7
